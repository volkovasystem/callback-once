!function(global,factory){if("function"==typeof define&&define.amd)define([],factory);else if("undefined"!=typeof exports)factory();else{factory(),global.callbackOnce={}}}("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:this,(function(){"use strict";module.exports=function callbackOnce(callback){if("function"==typeof callback){if(callback.$callData instanceof WeakMap==1&&"function"==typeof callback.$callData.get(callback).$checkCallCount&&"function"==typeof callback.$callData.get(callback).$addCallCount)return callback;{const delegateCallback=function delegateCallback(){if(!1===delegateCallback.$callData.get(delegateCallback).$checkCallCount()){const callCount=delegateCallback.$callData.get(delegateCallback).$callCount;throw new Error(["cannot execute callback more than once","@call-count: "+callCount])}return delegateCallback.$callData.get(delegateCallback).$addCallCount(),callback.apply(this,arguments)};return Object.defineProperty(delegateCallback,"$callData",{value:(new WeakMap).set(delegateCallback,{}),configurable:!1,enumerable:!1,writable:!1}),Object.defineProperty(delegateCallback.$callData.get(delegateCallback),"$callCount",{value:0,configurable:!1,enumerable:!1,writable:!0}),Object.defineProperty(delegateCallback.$callData.get(delegateCallback),"$addCallCount",{value:function(){delegateCallback.$callData.get(delegateCallback).$callCount++},configurable:!1,enumerable:!1,writable:!1}),Object.defineProperty(delegateCallback.$callData.get(delegateCallback),"$checkCallCount",{value:function(){return delegateCallback.$callData.get(delegateCallback).$callCount<1},configurable:!1,enumerable:!1,writable:!1}),delegateCallback}}return callbackOnce((function(){}))}}));